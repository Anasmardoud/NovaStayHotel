<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation">

	<!-- ============================================ -->
	<!-- MODERN OFFICE-STYLE COLOR PALETTE -->
	<!-- ============================================ -->

	<!-- Primary Colors - Microsoft Office Inspired -->
	<SolidColorBrush x:Key="PrimaryBrush" Color="#0078D4"/>
	<SolidColorBrush x:Key="PrimaryLightBrush" Color="#106EBE"/>
	<SolidColorBrush x:Key="PrimaryDarkBrush" Color="#005A9E"/>
	<SolidColorBrush x:Key="PrimaryHoverBrush" Color="#106EBE"/>

	<!-- Accent Colors - Modern Hotel Theme -->
	<SolidColorBrush x:Key="AccentBrush" Color="#8764B8"/>
	<SolidColorBrush x:Key="AccentLightBrush" Color="#A67FC9"/>
	<SolidColorBrush x:Key="AccentDarkBrush" Color="#6B4A96"/>

	<!-- Status Colors -->
	<SolidColorBrush x:Key="SuccessBrush" Color="#107C10"/>
	<SolidColorBrush x:Key="WarningBrush" Color="#FF8C00"/>
	<SolidColorBrush x:Key="DangerBrush" Color="#D13438"/>
	<SolidColorBrush x:Key="InfoBrush" Color="#0078D4"/>

	<!-- Neutral Colors - Office Style -->
	<SolidColorBrush x:Key="BackgroundBrush" Color="#FAFAFA"/>
	<SolidColorBrush x:Key="SurfaceBrush" Color="#FFFFFF"/>
	<SolidColorBrush x:Key="BorderBrush" Color="#E1E1E1"/>
	<SolidColorBrush x:Key="HoverBrush" Color="#F3F2F1"/>
	<SolidColorBrush x:Key="PressedBrush" Color="#EDEBE9"/>

	<!-- Text Colors -->
	<SolidColorBrush x:Key="TextPrimaryBrush" Color="#323130"/>
	<SolidColorBrush x:Key="TextSecondaryBrush" Color="#605E5C"/>
	<SolidColorBrush x:Key="TextMutedBrush" Color="#8A8886"/>

	<!-- Office-style Gradients -->
	<LinearGradientBrush x:Key="HeaderGradientBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#0078D4" Offset="0"/>
		<GradientStop Color="#005A9E" Offset="1"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="CardGradientBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FFFFFF" Offset="0"/>
		<GradientStop Color="#F8F9FA" Offset="1"/>
	</LinearGradientBrush>

	<!-- ============================================ -->
	<!-- MODERN SHADOW EFFECTS -->
	<!-- ============================================ -->

	<DropShadowEffect x:Key="ElevationLow"
                      ShadowDepth="2"
                      BlurRadius="8"
                      Opacity="0.12"
                      Color="#000000"/>

	<DropShadowEffect x:Key="ElevationMedium"
                      ShadowDepth="4"
                      BlurRadius="16"
                      Opacity="0.16"
                      Color="#000000"/>

	<DropShadowEffect x:Key="ElevationHigh"
                      ShadowDepth="8"
                      BlurRadius="24"
                      Opacity="0.20"
                      Color="#000000"/>

	<!-- ============================================ -->
	<!-- MODERN CARD STYLES -->
	<!-- ============================================ -->

	<!-- Main Card Style -->
	<Style x:Key="ModernCard" TargetType="Border">
		<Setter Property="Background" Value="{StaticResource CardGradientBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="Padding" Value="20"/>
		<Setter Property="Effect" Value="{StaticResource ElevationLow}"/>
		<Setter Property="Margin" Value="8"/>
	</Style>

	<!-- Filter Panel Card -->
	<Style x:Key="FilterPanelCard" TargetType="Border" BasedOn="{StaticResource ModernCard}">
		<Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
		<Setter Property="Padding" Value="16"/>
		<Setter Property="MinWidth" Value="280"/>
	</Style>

	<!-- Header Panel Style -->
	<Style x:Key="HeaderPanelStyle" TargetType="Border">
		<Setter Property="Background" Value="{StaticResource HeaderGradientBrush}"/>
		<Setter Property="CornerRadius" Value="8,8,0,0"/>
		<Setter Property="Padding" Value="20"/>
		<Setter Property="Effect" Value="{StaticResource ElevationMedium}"/>
	</Style>

	<!-- ============================================ -->
	<!-- MODERN BUTTON STYLES -->
	<!-- ============================================ -->

	<!-- Primary Button -->
	<Style x:Key="PrimaryButton" TargetType="Button">
		<Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="16,8"/>
		<Setter Property="MinHeight" Value="32"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource TextMutedBrush}"/>
							<Setter Property="Cursor" Value="Arrow"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Secondary Button -->
	<Style x:Key="SecondaryButton" TargetType="Button">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="16,8"/>
		<Setter Property="MinHeight" Value="32"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource HoverBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource PressedBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Small Action Button -->
	<Style x:Key="SmallActionButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Padding" Value="12,4"/>
		<Setter Property="MinWidth" Value="60"/>
		<Setter Property="MinHeight" Value="24"/>
	</Style>

	<!-- ============================================ -->
	<!-- MODERN TEXTBOX STYLES -->
	<!-- ============================================ -->

	<Style x:Key="ModernTextBox" TargetType="TextBox">
		<Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="12,8"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinHeight" Value="32"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Border x:Name="TextBoxBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
						<ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      Margin="{TemplateBinding Padding}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
							<Setter TargetName="TextBoxBorder" Property="BorderThickness" Value="2"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryLightBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="TextBoxBorder" Property="Background" Value="{StaticResource HoverBrush}"/>
							<Setter Property="Foreground" Value="{StaticResource TextMutedBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ============================================ -->
	<!-- MODERN COMBOBOX STYLES -->
	<!-- ============================================ -->

	<Style x:Key="ModernComboBox" TargetType="ComboBox">
		<Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="12,8"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinHeight" Value="32"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<ContentPresenter x:Name="ContentSite"
                                                  Grid.Column="0"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  Margin="{TemplateBinding Padding}"/>

								<ToggleButton x:Name="ToggleButton"
                                              Grid.Column="1"
                                              Width="32"
                                              Height="{TemplateBinding Height}"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press">
									<Path x:Name="Arrow"
                                          Fill="{StaticResource TextSecondaryBrush}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 0 0 L 4 4 L 8 0 Z"/>
								</ToggleButton>
							</Grid>
						</Border>

						<Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True">
							<Border x:Name="DropDownBorder"
                                    Background="{StaticResource SurfaceBrush}"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Effect="{StaticResource ElevationMedium}">
								<ScrollViewer>
									<StackPanel IsItemsHost="True"/>
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryLightBrush}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
							<Setter TargetName="Border" Property="BorderThickness" Value="2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBrush}"/>
							<Setter Property="Foreground" Value="{StaticResource TextMutedBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBox Item Style -->
	<Style x:Key="ModernComboBoxItem" TargetType="ComboBoxItem">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="Padding" Value="12,8"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Border x:Name="ItemBorder"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
						<ContentPresenter/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource HoverBrush}"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource PrimaryBrush}"/>
							<Setter Property="Foreground" Value="White"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ============================================ -->
	<!-- MODERN TEXT STYLES -->
	<!-- ============================================ -->

	<Style x:Key="HeaderText" TargetType="TextBlock">
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<Style x:Key="SubHeaderText" TargetType="TextBlock">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Opacity" Value="0.9"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="8,0,0,0"/>
	</Style>

	<Style x:Key="SectionHeader" TargetType="TextBlock">
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="Margin" Value="0,0,0,12"/>
	</Style>

	<Style x:Key="FieldLabel" TargetType="TextBlock">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Medium"/>
		<Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
		<Setter Property="Margin" Value="0,0,0,4"/>
	</Style>

	<Style x:Key="FilterHeaderStyle" TargetType="TextBlock">
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
		<Setter Property="Margin" Value="0,0,0,16"/>
	</Style>

	<!-- ============================================ -->
	<!-- STATUS INDICATOR STYLES -->
	<!-- ============================================ -->

	<Style x:Key="StatusIndicator" TargetType="Ellipse">
		<Setter Property="Width" Value="12"/>
		<Setter Property="Height" Value="12"/>
		<Setter Property="Margin" Value="6,0"/>
	</Style>

	<!-- Room Status Colors -->
	<Style x:Key="RoomStatusIndicator" TargetType="Ellipse" BasedOn="{StaticResource StatusIndicator}">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Status}" Value="Available">
				<Setter Property="Fill" Value="{StaticResource SuccessBrush}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Status}" Value="Occupied">
				<Setter Property="Fill" Value="{StaticResource DangerBrush}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Status}" Value="Reserved">
				<Setter Property="Fill" Value="{StaticResource WarningBrush}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Status}" Value="UnderMaintenance">
				<Setter Property="Fill" Value="{StaticResource InfoBrush}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Status}" Value="OutOfService">
				<Setter Property="Fill" Value="{StaticResource TextMutedBrush}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<!-- Reservation Status Colors -->
	<Style x:Key="ReservationStatusIndicator" TargetType="Ellipse" BasedOn="{StaticResource StatusIndicator}">
		<Style.Triggers>
			<DataTrigger Binding="{Binding Status}" Value="Created">
				<Setter Property="Fill" Value="{StaticResource InfoBrush}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Status}" Value="CheckedIn">
				<Setter Property="Fill" Value="{StaticResource SuccessBrush}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Status}" Value="CheckedOut">
				<Setter Property="Fill" Value="{StaticResource TextMutedBrush}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Status}" Value="Canceled">
				<Setter Property="Fill" Value="{StaticResource DangerBrush}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<!-- ============================================ -->
	<!-- TELERIK CONTROL STYLES -->
	<!-- ============================================ -->

	<!-- Modern Ribbon Style -->
	<Style x:Key="ModernRibbonView" TargetType="telerik:RadRibbonView">
		<Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
		<Setter Property="Effect" Value="{StaticResource ElevationLow}"/>
	</Style>

	<Style x:Key="ModernRibbonTab" TargetType="telerik:RadRibbonTab">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="FontWeight" Value="Medium"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Padding" Value="16,8"/>
	</Style>

	<Style x:Key="ModernRibbonButton" TargetType="telerik:RadRibbonButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Margin" Value="2"/>
		<Setter Property="Padding" Value="12,8"/>
		<Setter Property="FontWeight" Value="Medium"/>
		<Setter Property="CornerRadius" Value="4"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource HoverBrush}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{StaticResource PressedBrush}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Modern DataGrid Style -->
	<Style x:Key="ModernDataGrid" TargetType="telerik:RadGridView">
		<Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="RowIndicatorVisibility" Value="Collapsed"/>
		<Setter Property="GridLinesVisibility" Value="Horizontal"/>
		<Setter Property="CanUserFreezeColumns" Value="False"/>
		<Setter Property="ShowGroupPanel" Value="False"/>
		<Setter Property="IsReadOnly" Value="True"/>
		<Setter Property="AutoGenerateColumns" Value="False"/>
		<Setter Property="AlternationCount" Value="2"/>
		<Setter Property="RowHeight" Value="48"/>
		<Setter Property="FontSize" Value="14"/>
	</Style>

	<!-- DataGrid Row Style -->
	<Style x:Key="ModernDataGridRow" TargetType="telerik:GridViewRow">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource HoverBrush}"/>
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="#E3F2FD"/>
				<Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
				<Setter Property="BorderThickness" Value="0,0,0,2"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ============================================ -->
	<!-- VALIDATION AND MESSAGE STYLES -->
	<!-- ============================================ -->

	<Style x:Key="ErrorMessage" TargetType="Border">
		<Setter Property="Background" Value="#FFEBEE"/>
		<Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="4"/>
		<Setter Property="Padding" Value="12"/>
		<Setter Property="Margin" Value="0,8,0,0"/>
	</Style>

	<Style x:Key="SuccessMessage" TargetType="Border">
		<Setter Property="Background" Value="#E8F5E8"/>
		<Setter Property="BorderBrush" Value="{StaticResource SuccessBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="4"/>
		<Setter Property="Padding" Value="12"/>
		<Setter Property="Margin" Value="0,8,0,0"/>
	</Style>

	<Style x:Key="InfoMessage" TargetType="Border">
		<Setter Property="Background" Value="#E3F2FD"/>
		<Setter Property="BorderBrush" Value="{StaticResource InfoBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="4"/>
		<Setter Property="Padding" Value="12"/>
		<Setter Property="Margin" Value="0,8,0,0"/>
	</Style>

	<!-- ============================================ -->
	<!-- CHECKBOX STYLES -->
	<!-- ============================================ -->

	<Style x:Key="ModernCheckBox" TargetType="CheckBox">
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Padding" Value="8,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

						<Border x:Name="CheckBorder"
                                Grid.Column="0"
                                Width="18" Height="18"
                                Background="{StaticResource SurfaceBrush}"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="3"
                                VerticalAlignment="Center">
							<Path x:Name="CheckMark"
                                  Visibility="Collapsed"
                                  Fill="{StaticResource PrimaryBrush}"
                                  Data="M 0 4 L 3 7 L 8 0"
                                  Stretch="Uniform"
                                  Margin="3"/>
						</Border>

						<ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"/>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="CheckBorder" Property="Background" Value="{StaticResource PrimaryBrush}"/>
							<Setter TargetName="CheckBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
							<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
							<Setter TargetName="CheckMark" Property="Fill" Value="White"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="CheckBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ============================================ -->
	<!-- LISTBOX STYLES -->
	<!-- ============================================ -->

	<Style x:Key="MultiSelectListBox" TargetType="ListBox">
		<Setter Property="SelectionMode" Value="Multiple"/>
		<Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="MaxHeight" Value="120"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBox">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
						<ScrollViewer Padding="8">
							<StackPanel IsItemsHost="True"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MultiSelectListBoxItem" TargetType="ListBoxItem">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<CheckBox Content="{Binding DisplayName}"
                              IsChecked="{Binding IsSelected}"
                              Style="{StaticResource ModernCheckBox}"
                              Margin="4,2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ============================================ -->
	<!-- DATEPICKER STYLES -->
	<!-- ============================================ -->

	<Style x:Key="ModernDatePicker" TargetType="DatePicker">
		<Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="12,8"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinHeight" Value="32"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DatePicker">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>

							<DatePickerTextBox x:Name="PART_TextBox"
                                             Grid.Column="0"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             Padding="{TemplateBinding Padding}"
                                             VerticalContentAlignment="Center"/>

							<Button x:Name="PART_Button"
                                    Grid.Column="1"
                                    Width="32"
                                    Height="{TemplateBinding Height}"
                                    Background="Transparent"
                                    BorderThickness="0">
								<Path Fill="{StaticResource TextSecondaryBrush}"
                                      Data="M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,19H5V8H19V19Z"/>
							</Button>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ============================================ -->
	<!-- MODERN SCROLLVIEWER STYLES -->
	<!-- ============================================ -->

	<Style x:Key="ModernScrollViewer" TargetType="ScrollViewer">
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="CanContentScroll" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

						<ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1" Grid.Row="0"
                                   Orientation="Vertical"
                                   Width="12"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Minimum="0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"/>

						<ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Column="0" Grid.Row="1"
                                   Orientation="Horizontal"
                                   Height="12"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Minimum="0"
                                   ViewportSize="{TemplateBinding ViewportWidth}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ============================================ -->
	<!-- SEARCH AND FILTER STYLES -->
	<!-- ============================================ -->

	<Style x:Key="SearchBox" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Border x:Name="TextBoxBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="20">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>

							<Path Grid.Column="0"
                                  Fill="{StaticResource TextMutedBrush}"
                                  Margin="12,0,8,0"
                                  VerticalAlignment="Center"
                                  Data="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>

							<ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Column="1"
                                          VerticalAlignment="Center"
                                          Margin="0,8"/>

							<Button x:Name="ClearButton"
                                    Grid.Column="2"
                                    Width="24" Height="24"
                                    Margin="8,0,12,0"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Visibility="Collapsed">
								<Path Fill="{StaticResource TextMutedBrush}"
                                      Data="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
							</Button>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
							<Setter TargetName="TextBoxBorder" Property="BorderThickness" Value="2"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryLightBrush}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Text" Value=""/>
								<Condition Property="IsKeyboardFocusWithin" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed"/>
						</MultiTrigger>
						<Trigger Property="Text" Value="">
							<Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Filter Section Header -->
	<Style x:Key="FilterSectionHeader" TargetType="TextBlock">
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Foreground" Value="{StaticResource TextMutedBrush}"/>
		<Setter Property="Margin" Value="0,16,0,8"/>
	</Style>

	<!-- Active Filters Summary -->
	<Style x:Key="ActiveFiltersPanel" TargetType="Border">
		<Setter Property="Background" Value="#E3F2FD"/>
		<Setter Property="BorderBrush" Value="{StaticResource InfoBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="4"/>
		<Setter Property="Padding" Value="12"/>
		<Setter Property="Margin" Value="0,0,0,16"/>
	</Style>

	<!-- ============================================ -->
	<!-- ACTION BUTTON VARIANTS -->
	<!-- ============================================ -->

	<Style x:Key="EditButton" TargetType="Button" BasedOn="{StaticResource SmallActionButton}">
		<Setter Property="Background" Value="{StaticResource InfoBrush}"/>
		<Setter Property="Content" Value="Edit"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#0063B1"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="DeleteButton" TargetType="Button" BasedOn="{StaticResource SmallActionButton}">
		<Setter Property="Background" Value="{StaticResource DangerBrush}"/>
		<Setter Property="Content" Value="Delete"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#C62828"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CheckInButton" TargetType="Button" BasedOn="{StaticResource SmallActionButton}">
		<Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
		<Setter Property="Content" Value="Check In"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#0F5132"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CheckOutButton" TargetType="Button" BasedOn="{StaticResource SmallActionButton}">
		<Setter Property="Background" Value="{StaticResource WarningBrush}"/>
		<Setter Property="Content" Value="Check Out"/>
		<Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#E55100"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ============================================ -->
	<!-- HOTEL-SPECIFIC CARD STYLES -->
	<!-- ============================================ -->

	<Style x:Key="ReservationCard" TargetType="Border" BasedOn="{StaticResource ModernCard}">
		<Setter Property="MinHeight" Value="120"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
					<GradientStop Color="#FFFFFF" Offset="0"/>
					<GradientStop Color="#F8F9FA" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GuestInfoCard" TargetType="Border" BasedOn="{StaticResource ModernCard}">
		<Setter Property="Background" Value="#F0F4FF"/>
		<Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
	</Style>

	<Style x:Key="RoomDetailsCard" TargetType="Border" BasedOn="{StaticResource ModernCard}">
		<Setter Property="Background" Value="#FFF8E1"/>
		<Setter Property="BorderBrush" Value="{StaticResource WarningBrush}"/>
	</Style>

	<!-- ============================================ -->
	<!-- LOADING AND BUSY INDICATORS -->
	<!-- ============================================ -->

	<Style x:Key="LoadingOverlay" TargetType="Border">
		<Setter Property="Background" Value="#B0000000"/>
		<Setter Property="CornerRadius" Value="8"/>
	</Style>

	<Style x:Key="ModernBusyIndicator" TargetType="telerik:RadBusyIndicator">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontWeight" Value="Medium"/>
		<Setter Property="Content" Value="Loading..."/>
	</Style>

	<!-- ============================================ -->
	<!-- PAYMENT STATUS STYLES -->
	<!-- ============================================ -->

	<Style x:Key="PaymentStatusBadge" TargetType="Border">
		<Setter Property="CornerRadius" Value="12"/>
		<Setter Property="Padding" Value="8,4"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding IsPaid}" Value="True">
				<Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding IsPaid}" Value="False">
				<Setter Property="Background" Value="{StaticResource DangerBrush}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="PaymentStatusText" TargetType="TextBlock">
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding IsPaid}" Value="True">
				<Setter Property="Text" Value="PAID"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding IsPaid}" Value="False">
				<Setter Property="Text" Value="UNPAID"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<!-- ============================================ -->
	<!-- FORM LAYOUT STYLES -->
	<!-- ============================================ -->

	<Style x:Key="FormSection" TargetType="Border" BasedOn="{StaticResource ModernCard}">
		<Setter Property="Background" Value="#FAFBFC"/>
		<Setter Property="Margin" Value="0,0,0,16"/>
		<Setter Property="Padding" Value="20"/>
	</Style>

	<Style x:Key="FormRow" TargetType="Grid">
		<Setter Property="Margin" Value="0,0,0,16"/>
	</Style>

	<!-- ============================================ -->
	<!-- ANIMATION RESOURCES -->
	<!-- ============================================ -->

	<Storyboard x:Key="FadeInAnimation">
		<DoubleAnimation Storyboard.TargetProperty="Opacity"
                         From="0" To="1" Duration="0:0:0.3">
			<DoubleAnimation.EasingFunction>
				<QuadraticEase EasingMode="EaseOut"/>
			</DoubleAnimation.EasingFunction>
		</DoubleAnimation>
	</Storyboard>

	<Storyboard x:Key="SlideUpAnimation">
		<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                         From="20" To="0" Duration="0:0:0.3">
			<DoubleAnimation.EasingFunction>
				<QuadraticEase EasingMode="EaseOut"/>
			</DoubleAnimation.EasingFunction>
		</DoubleAnimation>
	</Storyboard>

	<!-- ============================================ -->
	<!-- CONVERTERS (if not already defined) -->
	<!-- ============================================ -->

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

</ResourceDictionary>